



一】如何保证版本的质量：
线下阶段：合理排期，测试范围（上下游），用户角度，研发自测，code reivew（开发代码规范），
case评审，流程是否规范，代码覆盖率，多种测试方法，进度同步（测试日报），产品验收，回归测试。

线上阶段：线上回归，灰度发布，ab策略，开关设置，线上监控，定时巡检，
数据统计，降级限流，用户问题反馈，故障快速处理。



二、怎么去搭建你的/完善测试体系，怎么更好的保障线上的质量，质量把控的思路？
这个范围很大，包括产品文档规范，需求的管理，开发质量，上线流程。

从测试的角度来说，就是规范测试流程。
测试/职业测试管理就是质量的把控，一个需求分为
需求评审，开发阶段，测试阶段，线上阶段，四个阶段，我们从这四个阶段进行把控。

一般我们项目可以分为四个阶段，
需求评审阶段，开发阶段，测试阶段，线上阶段，四个阶段，我们从这四个阶段进行把控。
需求阶段：合理的排期，人力是否充足，是否有上下游，需求收口。
研发阶段：code reivew，研发自测，case评审。
测试阶段：产品验收，测试日报同步进度和风险，开发解决bug的速度。
线上阶段：灰度发布，线上监控，定时巡检，数据统计，问题反馈，故障快速处理，复盘。

1.需求阶段，我们有合理的的排期以及人力
还有要约定统一的需求的收口，在测试的中后期少提需求的变更或者优化，
做好需求的管理。

2.开发阶段，
开发阶段你需确认测试环境是否正常，做一下测试的准备，比如构造数据。
开始写case，case评审，提供一份自测的case给开发，让开发自测。

还有要有进行测试左移，用ci流程去把控。
在研发自测有比较完善的流水线。
CI/pipeline-问题更早的发现，处理的成本越低
代码扫描/编译检查，自测，cr检查（code review），UI测试，qa测试，qa合入代码。

3.测试阶段，产品验收，有ui修改，设计验收，在群里发测试日报，
如果项目中有测试，我会一起收集，
看进度是否符合预期，其他人是否有风险，卡点，需不需要我帮忙推进。

同时还有做好测试右移的工作，线上是否监控以及增加报警，定时巡检，数据的统计，
我们还有查看是否有问题反馈群，故障流程处理，
（如果出现故障是否能够快速的定位和恢复。比如说，
开发的日志是否全面，是否有容灾的保障，服务容灾，数据容灾，核心就是快速的止损。）

4.线上阶段：先灰度发布，关注用户反馈和客诉，上线之后的值班，快速响应。
如果是大型项目的话最后可能还会进行项目的复盘。看看我们哪里做的好，哪里不好，
有什么风险是我们之前预料到的，有哪些风险我们之前没有预料到的。

线下阶段：合理排期，研发自测，code reivew，case评审，产品验收。
线上阶段：灰度发布，线上监控，定时巡检，数据统计，问题反馈，故障快速处理。



