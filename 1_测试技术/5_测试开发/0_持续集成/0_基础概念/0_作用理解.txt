



持续集成需要有一些规范/规则
1.需要先规定一个主分支
2.提交之后能够自动化触发流水线（自动化case）。
（在这个合并或者提交的过程中，都伴随着执行一系列的质量保证活动如代码规范检查、
单元测试、安全扫描等来确保代码的质量，可以提前发现问题尽早解决冲突）
3.清晰的集成规则，流水线每一步谁来做。




你们之前是怎么做持续集成的？
1.开发代码、测试脚本 通过git版本控制工具进行管理
2.出现代码变更，通过webhooks机制，触发jenkins任务
（git提交代码后，通过webhook发送http请求，触发自动化任务，webhook可以设置tag，
某些提交带有标签，触发对应的webhook）
3.jenkins里面会配置两大任务 开发自动化部署任务，（构建之后触发）测试自动化任务。



（背景：敏捷快发，周期快，频繁修改，重复性工作多）
为什么要做/持续集成的作用：
1.缩减在程序构建，部署等环节的时间，提高工作效率。
2.持续集成将工作流程进行标准化，减少因为人工所出现的问题。
（例如：程序部署的时候，jenkins软件一定会按照预先设定好
的流程进行配置，而人会出现操作失误或者遗漏步骤）


https://blog.csdn.net/weibo1230123/article/details/125862722
https://blog.csdn.net/IT_LanTian/article/details/125007799
Q2：你是怎么理解持续集成的？
ci就是持续集成：有两个概念集成和持续

集成：将不同的开发模块或者说不同的分支合到主分支。
持续：如何尽快的进行集成，比如，提交了代码，会自动触发流水线，
通过一定的规则合入到主分支。

持续集成的目标：是快速确保开发人员新提交的变更是好的，
jenkins收到git通知，代码编译和部署运行

cd就是持续交付
集成之后，为了保证产品质量，要自动的触发自动化测试。



















