



有一个视频tab，类似抖音竖屏滑动，对视频推荐。
接了他们的推荐部门的服务。
视频带了一个卡片，卡片上游戏的链接。



机器学习是我们项目中用的，视频推荐功能。
opencv是我自己搭建的ui自动化框架有用。

1.app与服务器的接口
2.服务器内部之间（微服务之间）
我们和reco的，是rpc接口（长链接）
（在平台里面，服务java grpc）
（使用python脚本 grpc请求 或者也可以是http请求）

比如：用户请求了一个视频相关的接口，要返回视频id，
后端的计算是非常复杂的，会经过召回，排序，
可能还有业务调控这些步骤，再返回给前端。



reco是算法部门，类似中台，做推荐，我们接他们的服务。
我们主要保证返回的数据格式是正常的，
还有我们会看相识度，1个视频，和他类似视频的相识度0-1，
那返回的就是相识度前10的视频，0.9,0.8这样。
（数据处理之后都是矩阵，两个矩阵，算相似度）
具体算法怎么算的，是reco那边负，他们是测试过的，
算法都是机器学习，我们做一个初步的了解，

（视频存储有一个公共的服务存储，不需要当作参数，id作参数）
主要是他们负责，我们这边会看一下。

1.我们的服务收到了请求，从数据库里选，有100个视频，
把视频id当作去请求reco的服务。会经过reco处理。

2.reco先经过召回阶段（100个选出10个）（搜索记录）
（根据用户的画像）（年龄，性别，行业）
召回：热门召回，协同过滤召回，标签召回

3.然后是排序阶段
3.1 模型（排序）（用户的关注）（哪些是热门视频）（视频的标签，打散）

4.还有就是人工调控（一些广告位或者运营位）
（1号位或者4号位是广告位或者运营位）

5.返回给我们10个，然后再返回给用户。



先进行召回，从100个视频选出10个视频，根据用户的画像。
（男性，大型游戏，女性，休闲游戏，游戏的风格不同）

排序就是根据用户的关注，热门视频，进行排序，还有视频的标签，打散。
算出用户最可能点击的视频


召回：
协同过滤：是一种算法名称 有两种
（矩阵算法：）
人以群分 基于用户
我喜欢三个，他喜欢四个，那么第四个我可能喜欢
物以类聚 基于物品
我喜欢a物品，b和a类型，我可能也喜欢a

计算相似度：（矩阵计算相识度）
视频的打分 看完10分，看了一点就1份
评论的打分 评论了就是1分

根据这些数据
计算用户行为矩阵的行
cos余弦 = v1*v2 / ｜v1｜* ｜v2｜


排序算法：
1.线性 logistic回归
2.非线性 gbdt
3.深度学习 wide deep


实时推荐：
（实时的算法 ftrl）
用户在线喜欢哪些视频，基于视频的标签，进行推荐。
美食，娱乐，足球。


指标（判断用户是否喜欢）：
1.停留时间
2.点击后行为
用户是否会评论
用户是否关注

离线：python
在线：java/c++
原则：能离线预先算好的，都离线算好。
线上是一个k-v的字典。

数据特别大的话，无法一次性加入内存。进行切分，
（多线程，切片）

建模的库：
sklearn

tensorflow
可以批量喂入。进行update


推荐算法的依赖的数据
用户行为：浏览，收藏，点赞，
用户属性：年龄，性别，学历，职业
物品属性：标题，标签，热度
上下文数据：用户所在地域，时间，日期，用户在产品上所在的路径



