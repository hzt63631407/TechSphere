



一、测试用例设计思路
1.功能 交互和ui
2.异常case：弱网，断网，无网，切换网络，杀app，后台，
账号在别的地方登陆，没有登陆,打电话，接口挂掉。
3.接口测试
4.兼容
5.客户端性能和服务器性能
6.安全测试



二、如何写出高质量的测试用例
1.明确需求，理解需求，从用户的角度考虑问题，人人都是产品经理。
2.知道测试用例的设计方法，边界值，等价类等，例如xxx，流程梳理，xmind列出来。
3.组内的交叉评审，产品，开发评审。
4.查找其他功能类似的用例，比如公司内部，网上。
5.除了业务的逻辑，还有异常情况，弱网，无网，切后台，杀app，没有登陆,双端登陆,
客户端版本兼容，快速点击，接口挂掉，异常返回
6.还有兼容性，客户端性能，服务器性能，安全性等等
7.根据以往出现的bug，覆盖的角度。



三、测试用例的设计就是拆解，你把一个功能拆解成多个场景，比如说，下载这个功能。
有下载前，下载中，下载完成，这种是根据链路来设计测试用例



四、用例设置方法
常用的：等价类、边界值、错误推测（异常）、判定表法
1.等价类划分法
顾名思义，等价类划分，就是将测试的范围划分成几个互不相交的子集，
他们的并集是全集，从每个子集选出若干个 有代表性的值作为测试用例。
2.边界值分析法
长期的测试工作经验告诉我们，大量的错误是发生在输入或输出范围的边界上，
而不是发生在输入输出范围的内部。因此针对各种边界情况设计测试用例，
可以查出更多的错误。选出的测试用例，应选取正好等于、刚刚大于、刚刚小于边界的值，
例如，对于在区间min，max的值，测试用例可以记为min，min+，max，max-。
3.错误推测法
错误推测法是指：在测试程序时，人们可以根据经验或直觉推测程序中可能存在的各种错误，
从而有针对性地编写检查这些错误的测试用例的方法。
这种方法没有固定的形式，依靠的是经验和直觉，很多时候，我们都会不知不觉的使用到。
4.判定表法
又称为策略表，基于策略表的测试，是功能测试中最严密的测试方法。
该方法适合于逻辑判断复杂的场景，通过穷举条件获得结果，
对结果再进行优化合并，会得到一个判断清晰的策略表。


其实就是一个输入-输出的过程，看结果符不符合预期。


正向测试相对应的是反向测试，
所指的反向测试测试支持流程的反向进行或者是功能的反向测试，
这是一个在业务测试里的概念，例如支付付款是正向测试，那么退款是反向测试。




五、设计测试用例：页面上传文件，下载一个表格，三个列
下载，空excel，第二次下载，
上传，空，文件内容为空，其他格式，信息有没有限制，信息不全，信息全面，
多个，第二次上传，更换

上传失败，重试，服务器挂掉了
断网，断点续传，上传一般关闭页面
网络切换

页面展示：空的时候，信息不全，信息全面，多个
协同：多人同时，账号登陆