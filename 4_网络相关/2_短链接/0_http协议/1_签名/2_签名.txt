



https://mp.weixin.qq.com/s?__biz=MzI2MzEwNTY3OQ==&mid=2648979521&idx=2&sn=16f5c3d95b28d3d7104f66105e0cb6d5&chksm=f25065a1c527ecb740b5e4f16fbaac44e4b01d060a0bddefec602f1c17f74fb7a4284de2eaaa&scene=27

加密是签名中的一环。


一.信息摘要算法
一段信息，经过摘要算法得到一串哈希值，就是摘要(dijest)。
常见的摘要算法有MD5、SHA1、SHA256、SHA512等。
关于摘要，有几点需要你明白的：
1、摘要算法，是把任意长度的信息，映射成一个定长的字符串。
2、摘要算法，两个不同的信息，是有可能算出同一个摘要值的。
3、摘要算法与加密算法不同，不存在解密的过程。
4、摘要算法不用于数据的保密，而是用于数据的完整性校验。

http签名加密的一个例子
https://blog.csdn.net/wangjia55/article/details/80564371



2.(数字)签名
摘要经过私钥的加密后，便有了一个新的名字 -- 数字签名。
签名 是在发送方，这是一个加密的过程。
验签 是在接收方，这是一个解密的过程。


那搞懂数字签名的意义是什么？只要回答下面两个问题即可。
数字签名 = 信息摘要 + 加密

第一个问题，有了信息摘要，为何还要有数字签名？
答：信息摘要，虽然也不可逆，但却容易却被伪造。所以信息摘要只用于校验完整性，
而要保证信息摘要的正确性，就要依靠数字签名啦。
数字签名的签名和验签是非对称加密，其他人除非拿到私钥，不然没法伪造。

第二个问题，为什么不对内容直接加密，而是对摘要进行加密。
答：由上面我们知道了非对称加密的速度非常慢，如果传输的数据量非常大，
那这个加密再解密的时间要远比网络传输的时间来得长，这样反而会得不偿失。
如果我们对传输的内容只有完整性要求，而安全性没有要求（意思是传输的内容被人知道了也没关系）。
那就可以对摘要进行加密，到客户端这里解密后得到摘要明文，
再用这个摘要明文与传输的数据二次计算的摘要进行比较，
若一致，则说明传输的内容是完整的，没有被篡改。




3.数字证书
（共钥是可信的）

在数字签名那里，不知道你有没有发现一个问题？
数字签名是非对称加密，服务端有一个私钥，客户端一个公钥，只有这两个对上了验签。

那假如说你（客户端）拿到的公钥并不是服务端给的呢，而是黑客塞给你的呢？
而你却把这个假公钥当成真的，那么当你使用这个假公钥加密一些敏感信息时，
黑客就可以截取你的这段信息，由于这信息是用黑客自己的公钥加密的，
这样一来，黑客拿自己的私钥就能解密得到你的敏感信息。

这就是问题所在。

要解决这个问题，其实只要保证『公钥』是可信的。只有服务端发给你的公钥你才能拿，
而坏人给你的公钥，你要懂得识别并丢弃它。


数字证书就应运而生了。
要理解数字证书，同样只要搞懂两个问题即可。
1.数字证书是什么东西？
其实它就是一个 .crt 文件

2.数字证书是谁颁发的？
由权威证书认证机构颁发，一般我们简称为 CA 机构

3.数字证书如何申请的？或者说如何颁发的？
3.1、在自己的服务器上生成一对公钥和私钥。
然后将域名、申请者、公钥（注意不是私钥，私钥是无论如何也不能泄露的）
等其他信息整合在一起，生成.csr 文件。

3.2、将这个 .csr 文件发给 CA 机构，CA 机构收到申请后，
会通过各种手段验证申请者的组织信息和个人信息，
如无异常（组织存在，企业合法，确实是域名的拥有者），
CA 就会使用散列算法对.csr里的明文信息先做一个HASH，得到一个信息摘要，
再用 CA 自己的私钥对这个信息摘要进行加密，生成一串密文，
密文即是所说的 签名。签名 + .csr 明文信息，即是 证书。
CA 把这个证书返回给申请人。




