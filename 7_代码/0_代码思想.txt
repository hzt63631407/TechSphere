



我个人认为代码有这几种级别：
1）可编译
2）可运行
3）可测试
4）可读
5）可维护
6）可重用


python全面的库：
https://blog.csdn.net/dingyu002/article/details/118497204?



代码结构：
api，control（http接口）
services，（内部接口）
dao（数据操作对象）
util


https://blog.csdn.net/youxijishu/article/details/116212774

一般

/**
 * @author 王广帅
 * @date 2021年04月27日 2:41 下午
 */
public class CardService {

    public  void cardUpLevel(Player player, CardModel cardModel) {
        //检测是否达到最大等级
        if (cardModel.getLevel() >= 100) {
            throw new IllegalArgumentException("已达到最大等级");
        }
        //检测材料是否足够
        if (player.getDiamond() < 100) {
            throw new IllegalArgumentException("钻石不足");
        }
        //扣除钻石
        player.setDiamond(player.getDiamond() - 100);
        int nextLevel = cardModel.getLevel() + 1;
        cardModel.setLevel(nextLevel);
    }
}


重构之后：

/**
 * @author 王广帅
 * @date 2021年04月27日 2:41 下午
 */
public class CardService {

    public void cardUpLevel(Player player, CardModel cardModel) {
        checkArrivalMaxLevel(cardModel);
        checkDiamondEnough(player);
        upLevel(player, cardModel);

    }

    private void checkArrivalMaxLevel(CardModel cardModel) {
        //检测是否达到最大等级
        if (cardModel.getLevel() >= 100) {
            throw new IllegalArgumentException("已达到最大等级");
        }
    }

    private void checkDiamondEnough(Player player) {
        //检测材料是否足够
        if (player.getDiamond() < 100) {
            throw new IllegalArgumentException("钻石不足");
        }
    }

    private void upLevel(Player player, CardModel cardModel) {
        //扣除钻石
        player.setDiamond(player.getDiamond() - 100);
        int nextLevel = cardModel.getLevel() + 1;
        cardModel.setLevel(nextLevel);
    }
}
