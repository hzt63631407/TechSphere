



一、测试重点（不是很全）
异步时间：
1.存储到mysql时间长，时间是否可以接受
2.幂等性（推送同一条消息）：检查是否重复处理（业务上的唯一id，订单号）
3.消息在过程中是否丢失，传输的可靠性（如何发消息的）
3.1生产者弄丢了数据，开启mq的事务处理，如果没有接收到数据，就重发
3.2RabbitMQ弄丢了数据，开启 RabbitMQ 的持久化
3.3消费者弄丟了数据，进程挂了，进行ack处理
4.消息堆积，mq堆积的消息太多
4.1扩容



二、mq架构测试注意事项：
1.异步性   点完外卖，评论送积分，积分可以异步处理
2.消息丢失
发消息3种：
sync 同步发送  有重试 最慢
async 异步发送  有2次重试 代码执行后，不等待，有回调函数来接受
往往程序设计，要在接受mq确认没有问题之后，才继续进行。
one-way 只发一次 比较容易出问题 一般用于日志

p.sync 一定发送成功了，mq一定有数据
p.async 发送了，就继续执行下一步代码，但是mq不一定有数据，可能mq内存满了

mq刷盘（存入到mysql）
1.同步刷新（写入磁盘）
2.异步处理（写入到内存，定时写入磁盘）

3.幂等性：一次处理对应一次结果，不能重复处理
消费者代码-收到消息之后，要检查是否重复处理
业务上的唯一id，支付id，订单号




三、可能出现的问题
https://www.cnblogs.com/gudicao/p/11649628.html
https://blog.csdn.net/weixin_44692700/article/details/110449695