




一、熔断、限流、降级的区别
https://www.cnblogs.com/feshfans/p/14509322.html
熔断
服务熔断的作用类似于我们家用的保险丝，当某服务出现不可用或响应超时的情况时，
为了防止整个系统出现雪崩，暂时停止对该服务的调用。

限流
限流是指上游服务对本服务请求 QPS 超过阙值时，
通过一定的策略(如延迟处理、拒绝处理)对上游服务的请求量进行限制，
以保证本服务不被压垮。

降级
下线非核心服务以保证核心服务的稳定、降低实时性、降低数据一致性







5.降级？
当 Service A 调用 Service B，失败多次达到一定阀值，
Service A 不会再去调 Service B，而会去执行本地的降级方法！
对于这么一套机制:在 Spring cloud 中结合 Hystrix，将其称为熔断降级!

https://smile.blog.csdn.net/article/details/81230412

页面降级 —— 可视化界面禁用点击按钮、调整静态页面
延迟服务 —— 如定时任务延迟处理、消息入MQ后延迟处理
写降级 —— 直接禁止相关写操作的服务请求
读降级 —— 直接禁止相关度的服务请求
缓存降级 —— 使用缓存方式来降级部分读频繁的服务接口

针对后端代码层面的降级处理策略，则我们通常使用以下几种处理措施进行降级处理：
抛异常
返回NULL
调用Mock数据
调用Fallback处理逻辑







预案
预案分类：容量不足的预案，比如降级，比如封禁，比如限流。
功能的预案，比如切流，比如静态化，比如直接摘除。
等等预案一定要经过演练才能保障最终的可靠。



切流是最常用的一种手段
通过常用稳定性保障手段如资源扩容、限流、熔断、降级、兜底、资源隔离等