



如何进行微服务治理？
管理服务，哪些接口到注册中心，dubbo内部接口



分布式系统面临的
服务雪崩
多个微服务之间调用的时候，假设微服务A调用微服务B和微服务C，
微服务B和微服务C又调用其它的微服务，这就是所谓的“扇出”。
如果扇出的链路上某个微服务的调用响应时间过长或者不可用，
对微服务A的调用就会占用越来越多的系统资源，进而引起系统崩溃，所谓的“雪崩效应”.

① 熔断模式：这种模式主要是参考电路熔断，如果一条线路电压过高，
保险丝会熔断，防止火灾。放到我们的系统中，如果某个目标服务调用慢或者有大量超时，
此时，熔断该服务的调用，对于后续调用请求，不在继续调用目标服务，
直接返回，快速释放资源。如果目标服务情况好转则恢复调用。

② 隔离模式：这种模式就像对系统请求按类型划分成一个个小岛的一样，
当某个小岛被火少光了，不会影响到其他的小岛。例如可以对不同类型的请求使用线程池来资源隔离，
每种类型的请求互不影响，如果一种类型的请求线程资源耗尽，则对后续的该类型请求直接返回，
不再调用后续资源。这种模式使用场景非常多，例如将一个服务拆开，
对于重要的服务使用单独服务器来部署，再或者公司最近推广的多中心。

③ 限流模式：上述的熔断模式和隔离模式都属于出错后的容错处理机制，
而限流模式则可以称为预防模式。限流模式主要是提前对各个类型的请求设置最高的QPS阈值，
若高于设置的阈值则对该请求直接返回，不再调用后续资源。
这种模式不能解决服务依赖的问题，只能解决系统整体资源分配问题，
因为没有被限流的请求依然有可能造成雪崩效应。




服务器异常场景构建
https://blog.csdn.net/weixin_43519121/article/details/120722466
https://blog.csdn.net/qianlia/article/details/106584881
https://blog.csdn.net/weixin_40901926/article/details/120543066
https://baijiahao.baidu.com/s?id=1738926475635911557&wfr=spider&for=pc
https://zhuanlan.zhihu.com/p/540912003
https://blog.csdn.net/fegus/article/details/124763949










