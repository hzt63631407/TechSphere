



常见问题和解决办法
1.穿透
2.击穿
3.雪崩

缓存穿透（key不存在）
描述：key不存在redis，也不在mysql，导致数据库压力巨大
解决办法：
1.缓存空值（null）或默认值
2.一般对于这种访问可能由于遭到攻击引起，可以对请求进行身份鉴权、数据合法行校验等。
（黑名单限制）


缓存击穿（单个key失效/过期）
描述：指大量请求访问缓存中的一个key时，该key过期了，
导致这些请求都去直接访问数据库，短时间大量的请求可能会将数据库击垮。
解决办法：
1、key设置不过期 。
2、添加互斥锁或分布式锁，只让一个线程去访问数据库，
将数据添加到缓存中后，其他线程直接从缓存中获取。


缓存雪崩（多个key失效）（因此，可以将缓存击穿看作是缓存雪崩的一个子集。）
描述：指在系统运行过程中，缓存服务宕机或大量的key值同时过期，
导致所有请求都直接访问数据库导致数据库压力增大。
解决办法：
1、将key的过期时间打散，避免大量key同时过期。
2、加互斥锁，同一key值只允许一个线程去访问数据库，其余线程等待写入后直接从缓存中获取。
3、服务熔断、限流、降级等措施保障。


缓存穿透，缓存击穿，缓存雪崩。
https://blog.csdn.net/qq_45637260/article/details/125866738
https://blog.csdn.net/weixin_42889176/article/details/125753701
https://blog.csdn.net/plj5201314/article/details/124296910



（性能测试）注意事项
缓存预热：
如果程序初次运行，此时由于数据尚未加载到缓存，则程序时间明显变长。
1.测试缓存没有的情况，系统性能是怎么样的，
以及多久才能恢复到正常的性能。（找开发，删数据）
2.测试缓存已经加载的情况，系统运行了一段时间，缓存是什么样的。

缓存击穿：key过期，大流量请求到mysql，数据库是否能够支撑。

缓存雪崩：模拟redis出现故障的场景（redis服务挂掉），
redis目前这种架构，不能完全保障100%数据不丢失，
检查程序是否还正常运行（容错性的概念，没有缓存，是慢一点还是没有办法完全运行）



redis瓶颈分析
1.看服务器资源
2.看本身程序的资源
3.redis存在大量大连接 通过info查看连接数量
4.响应时间
查询方式
4.1 redis慢查询日志
4.2 redis的info命令
因素
4.1 是否开启持久化（不仅要操作内存，还有操作硬盘）
4.2 是否有大量的数据过期


redis性能调优（类似sql调优）
1.pipelining管道批处理
2.redis处理命令时采用单线程，所以不需要大量redis连接
3.不要使用复杂的命令操作




redis 在生产当中一般有四种场景：单机，主从，哨兵，集群，现在是用集群

集群+主从 一主两从

集群中的每个节点都有1个至N个复制品，其中一个为主节点，其余的为从节点，
如果主节点下线了，集群就会把这个主节点的一个从节点设置为新的主节点继续工作，
这样集群就不会因为一个主节点的下线而无法正常工作。

Redis集群引入了主从模式，一个主节点对应一个或者多个从节点，当主节点宕机的时候，就会启用从节点

节点A覆盖1365-5460
节点B覆盖6827-10922
节点C覆盖12288-16383
节点D覆盖0-1364,5461-6826,10923-12287



redis面试题
https://blog.csdn.net/weixin_40205234/article/details/124614720
https://zhuanlan.zhihu.com/p/482166127
http://t.zoukankan.com/east7-p-14828243.html


