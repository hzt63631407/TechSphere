1.select  查询的字段
2.from 表名或者多表链接
（join in）
3.where 限制条件（嵌套 select）
4.group by 进行分组  字段要在select里面
5.having count(sales) > 1; 聚合函数，字段 过滤条件
6.order by 排序
7.limit 限制数量



1.查询gpa的最高值
select gpa
from user_profile
where university='复旦大学'
order by gpa desc limit 1;

oder 默认是升序
desc 降序排列，从高到低
asc  升序排序，从低到高


2.在一表中查出成绩最高的3名学生
select gpa
from user_profile
where university='复旦大学'
order by gpa desc limit 3;

倒数第5到7名;
select gpa
from user_profile
where university='复旦大学'
order by gpa desc limit 5,7;


3.条件限制 where in和not in
select device_id,gender,age,university,gpa
from user_profile
where university in('北京大学','复旦大学','山东大学');

select device_id ,gender, age, university, gpa
from user_profile
where university NOT IN ("浙江大学");

where age > 24;
where ager >=20 and age <=23;
where university like '%北京%';


4.having 通常与oder by一起
select store_name,sum(sales)
from store_information
group by store_name
having sum(sales) > 1500;

having count(sales) > 1;            # 限制数据大于1

where:
where是一个约束声明,使用where来约束来自数据库的数据;
where是在结果返回之前起作用的;
where中不能使用聚合函数

having:
having是一个过滤声明;
在查询返回结果集以后，对查询结果进行的过滤操作;
在having中可以使用聚合函数

where和having的执行顺序
where 早于 group by 早于 having


5.聚合函数 count
现在运营想要看一下男性用户有多少人以及他们的平均gpa是多少

限定条件为 男性用户；
有多少人，明显是计数，count函数；
平均gpa，求平均值用avg函数；

表头重命名，用as语法
浮点数的平均值可能小数点位数很多，按照示例保存一位小数，用round函数

select
  count(gender) as male_num,
  round(avg(gpa), 1) as avg_gpa
from user_profile where gender="male";

select name from test.stu
group by name
having min(score)>=80

聚合函数和group by
即对某些数据进行统计数量或者计算平均值

聚合函数就是例如SUM, COUNT, MAX, AVG等对一组(多条)数据操作的函数，
需要配合group by 来使用。
group by 进行分组

其他：函数，sum，avg，count，min，max


7.去重
1.作用于单列
select distinct name from A
a的名字有重复的，但是只返回没有重复的，相当于set()

2.作用于多列
select distinct name, id from A


8.嵌套查询
select name from stu
group by name
having name not in (
select name from stu
where score <80)

Select 图书名，作者，出版社，价格
From books
Where 价格> (select avg(价格) from books)


9.多表查询
https://blog.csdn.net/m0_57659908/article/details/121104487

默认是内链接（取交集）
外链接有两种 左链接和右链接

select * from A,b where A.id=b.id

select a.Name, p.Name from ADMIN a, person p where person.id = admin.id

内链接 inner join on(on 可以省略) 找出交集，其实不用

select (* 或者 persons.lastname,persons.fristname),
from persons
inner join oders
persons.id = orders.id (相等)
（and inner join 表 persons.name = orders.name）
odery by persons.lastname;


2.左右链接
以左表为主表，查询出满足条件的内容。查询到的内容是左表全部的内容，
和右表满足要求的内容。可能会出行右表内容为为空的可能。
select b.id,b.title,u.name from blog b left join  user u on u.id=b.user_id;

以右表为主表，查询出满足条件的内容。查询到的内容是右表全部的内容，
和左表满足要求的内容。可能会出行左表内容为为空的可能。
select b.id,b.title,u.name from blog b right join  user u on u.id=b.user_id


可以用 EXCEPT 来取差集
select * from ta where col1 = xxx
except
select * from ta where col2 = yyy;


10.多表嵌套

SELECT
    b.tag,
    count(*) tag_cnt
FROM
    exam_record a
LEFT JOIN examination_info b ON a.exam_id = b.exam_id
# 查询满足：月均完成试卷数不小于3的用户
WHERE
    a.uid IN (
        SELECT
            uid
        FROM
            exam_record
        WHERE
            submit_time IS NOT NULL
        GROUP BY
            uid,
            DATE_FORMAT(submit_time, '%Y%m')
        HAVING
            COUNT(submit_time) > 2
    )
# 筛选之后，按examination_info表的tag进行分组统计，最后降序输出
GROUP BY
    b.tag
ORDER BY
    tag_cnt DESC








4. SQL语句主要分为哪几类?
数据定义语言DDL（Data Ddefinition Language）CREATE，DROP，ALTER

主要为以上操作 即对逻辑结构等有操作的，其中包括表结构，视图和索引。

数据查询语言DQL（Data Query Language）SELECT

这个较为好理解 即查询操作，以select关键字。

各种简单查询，连接查询等 都属于DQL。

数据操纵语言DML（Data Manipulation Language）INSERT，UPDATE，DELETE

主要为以上操作 即对数据进行操作的，

对应上面所说的查询操作 DQL与DML共同构建了多数初级程序员常用的增删改查操作。

而查询是较为特殊的一种 被划分到DQL中。

数据控制功能DCL（Data Control Language）GRANT，REVOKE，COMMIT，ROLLBACK

主要为以上操作 即对数据库安全性完整性等有操作的，可以简单的理解为权限控制等。


9. SQL的生命周期？
应用服务器与数据库服务器建立一个连接
数据库进程拿到请求sql
解析并生成执行计划，执行
读取数据到内存并进行逻辑处理
通过步骤一的连接，发送结果到客户端
关掉连接，释放资源
