




一、服务注册与发现：
微服务设计的项目一般都是基于分布式服务的注册和发现机制的，
所有的服务都是在一个注册中心集中存储的。



服务注册，就是提供某个服务的模块信息(通常是这个服务的ip和端口)
注册到1个公共的组件上去(比如: zookeeper\consul)。
（系统部署的时候需要配置注册中心的地址和ip）

服务发现，就是新注册的这个服务模块能够及时的被其他调用者发现。
不管是服务新增和服务删减都能实现自动发现。

注册中心：
服务a请求注册中心，注册中心再请求服务b





什么是服务配置中心
配置中心：顾名思义，就是用来统一管理项目中所有配置的系统。
传统项目中配置所面临的问题
一般是静态化配，更新配置后，项目需要重启
配置文件无法区分环境。
配置文件过于分散。

springcloud有配置中心，配置中心本质也是一个微服务
同样注册到服务注册中心（eureka）
通过修改gut仓库中的配置文件实现所有微服务的配置文件的修改。

Eureka包含两个组件：Eureka Server和Eureka Client。
在Eureka Client启动的时候，将自身的服务的信息发送到Eureka Server，
同时也会从Eureka Server下载服务注册信息保存到Eureka Client缓存中。
当服务间相互调用其它服务时，
在Eureka Client中获取服务信息（如服务地址，端口等）后，实现服务之间的交互。

网关的作用
1.负载均衡
2.日志
3.熔断
4.对外统一接口

Ribbon的负载均衡原理
简单的说，就是在配置文件中列出Load Balancer（简称LB）后面所有的机器，
Ribbon会自动的帮助你基于某种规则（如简单轮询，随机连接等）
去连接这些机器。我们也很容易使用Ribbon实现自定义的负载均衡算法,
将请求平摊的分配到多个服务上，从而达到系统的高可用。






2.1、从服务提供者的角度看：

当服务提供者启动的时候，需要将自己提供的服务注册到指定的注册中心，
以便服务消费者能够通过服务注册中心进行查找；

当服务提供者由于各种原因致使提供的服务停止时，需要向注册中心注销停止的服务；

服务的提供者需要定期向服务注册中心发送心跳检测，
服务注册中心如果一段时间未收到来自服务提供者的心跳后，
认为该服务提供者已经停止服务，则将该服务从注册中心上去掉。

2.2、从调用者的角度看：

服务的调用者启动的时候根据自己订阅的服务向服务注册中心查找服务提供者的地址等信息；

当服务调用者消费的服务上线或者下线的时候，注册中心会告知该服务的调用者；

服务调用者下线的时候，则取消订阅。




4.SpringCloud包括哪些
springcloud由什么组成
Spring Cloud Eureka：服务注册与发现
Spring Cloud Zuul：服务网关
Spring Cloud Ribbon：客户端负载均衡
Spring Cloud Feign：声明性的Web服务客户端
Spring Cloud Hystrix：断路器
Spring Cloud Confifig：分布式统一配置管理











