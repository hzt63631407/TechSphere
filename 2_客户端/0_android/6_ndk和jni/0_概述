



NDK（Native Development Kit）包含实际的工具和库，用于开发使用本地代码的Android应用程序。
NDK提供了编译器、调试器、构建工具和预构建的库等，使开发者能够使用C、C++和其他支持的本地语言编写代码。

JNI（Java Native Interface）是一种机制，用于在Java程序和本地代码之间进行通信和交互。
JNI本身并没有提供具体的代码实现，它是一组规范和约定，定义了Java程序和本地代码之间的接口和交互方式。

在使用JNI时，开发者需要在Java代码中声明本地方法，并通过JNI与本地代码进行绑定。
本地方法的具体实现则是由本地代码（如C、C++）提供的，开发者需要使用NDK来编写和构建本地代码。

因此，NDK提供了实际的代码开发工具和库，而JNI提供了一种机制，
通过在Java代码中声明本地方法和与本地代码进行交互，将Java程序与本地代码连接起来。




学习网站：
https://blog.csdn.net/hello_1995/article/details/108784375
https://blog.csdn.net/Love667767/article/details/129727138
https://blog.csdn.net/Love667767/article/details/129727094
