



一、广播接收器：监听网络变化(BroadcastReceiver)
BroadcastReceiver也就是“广播接收者”的意思，顾名思义，它就是用来接收来自系统和应用中的广播。



二、作用：
1.监听网络状态变化
在某些场合，比如用户浏览网络信息时，网络突然断开，我们要及时地提醒用户网络已断开。
要实现这个功能，我们可以接收网络状态改变这样一条广播，
当由连接状态变为断开状态时，系统就会发送一条广播，
我们接收到之后，再通过网络的状态做出相应的操作。

2.用户接受到了app广播的push

3.强制用户下线



三、原理：
Android 中的广播使用了设计模式中的观察者模式：基于消息的发布/订阅事件模型。
模型中有3个角色：
1. 消息订阅者（广播接收者）
2. 消息发布者（广播发布者）
3. 消息中心（ AMS ，即 Activity Manager Service ）
步骤：
1、广播接收者 通过 Binder 机制在 AMS 注册
2、广播发送者 通过 Binder 机制向 AMS 发送广播
3、AMS 根据 广播发送者 要求，在已注册列表中，
寻找合适的广播接收者寻找依据：IntentFilter / Permission
4、AMS 将广播发送到合适的广播接收者相应的消息循环队列中；
5、广播接收者通过 消息循环 拿到此广播，并回调 onReceive()特别注意：
广播发送者 和 广播接收者的执行 是 异步的，发出去的广播不会关心有无接收者接收，也
不确定接收者到底是何时才能接收到





四、分类
1）标准/无序广播（Normal broadcast）
是一种完全异步执行的广播，在广播发出之后，所有的 广播接收器几乎都会在同一时刻接收到这条广播消息，
因此它们之间没有任何先后顺序可言。这种广播的效率会比较高，但同时也意味着它是无法被截断的。

使用范围:监听网络变化。
自定义广播:点击按钮，触发toast。


2）有序广播（Ordered broadcast）
则是一种同步执行的广播，在广播发出之后，同一时刻只会有一个广播接收器能够收到这条广播消息，
当这个广播接收器中的逻辑执行完毕后，广播才会继续传递。所以此时的广播接收器是有先后顺序的，
优先级高的广播接收器就可以先收到广播消息，并且前面的广播接收器还可以截断正在传递的广播，
这样后面的广播接收器就无法收到广播消息了。


3）本地广播（Local Broadcast）
可理解为一种局部广播，广播的发送者和接收者都同属于一个App。 相比于全局广播（普通广播）
，App应用内广播优势体现在：安全性高 & 效率高





五、生命周期
1.一般广播的生命周期都极短，需要在10s内处理完onReceiver中的所有工作，
所以，一般不进行耗时长的工作
2.动态注册方式的BroadcastReceiver，生命周期仅限于当前注册的activity，
离开activity一定要解除注册






