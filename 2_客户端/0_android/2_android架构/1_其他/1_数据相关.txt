



一、数据存储
Android的数据存储形式。
（1）使用SharedPreferences存储数据
特点：使用简单，应用内数据共享，但只支持基本数据类型。
（2）使用文件存储
（3）SQLite数据库存储
（4）使用ContentProvider存储数据（原理还是123中的一种，只是可以对外共享）


文件存储是android中最基本的一种数据存储方式:
所有的文件都默认存储到/data/data/<packagename>/files/目录下。

SharedPreferences使用键值对的方式来存储数据的:
存储到/data/data/<packagename>/shared_prefs/目录下。

SQLite:
存储到/data/data/<packagename>/databases/目录下。




二、只能主线程更新ui
Android是不允许在子线程中进行UI操作的，
我们需要通过这个方法将线程切换到主线程，然后更新UI元素。

Android 规定访问 UI 只能在主线程中进行，因为 Android 的 UI 控件不是线程安全的，
多线程并发访问会导致 UI 控件处于不可预期的状态。

为什么系统不对 UI 控件的访问加上锁机制？
缺点有两个：
加锁会让 UI 访问的逻辑变得复杂；
其次锁机制会降低 UI 访问的效率。
如果子线程访问 UI，那么程序就会抛出异常。




三、如何进行网络通信
使用new thread来进行网络的耗时操作，但注意run方法无法返回值，
因为run方法的返回值不是sendhttprequest的返回值，没有意义。


一般只需要new出url对象，并传入目标的网络地址，然后调用一下openConnection()方法即可。
Url url = new Url("http://www.baidu.com");
HttpURLConnection connetcion = (HttpURLConnection)url.openConnection();
GET表示希望从服务器那里获取数据 POST表示希望提交数据给服务器
connetcion.setRequestMethod("GET");
设置连接超时，读取超时
connetcion.setConnectTimeout(8000);
connetcion.setReadTimeout(8000);
调用getInputStream()方法获取服务器返回的输入流
InputStream in = connection.getInputStream();
调用disconnect()方法将Http连接关闭。
connetcion.disconnetction();





