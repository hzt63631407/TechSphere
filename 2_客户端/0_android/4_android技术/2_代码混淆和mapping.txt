



https://blog.csdn.net/qjyws/article/details/126488356

客户端在build.gradle可以设置开启混淆。
混淆后的代码很难被反编译，即使反编译成功也很难得出程序的真正语义。

一般情况下发布到市场的版本是要混淆的


好处
根据以上定义，可以简单对混淆的好处和坏处总结如下

防止反编译获取项目源码
精简编译后的apk文件大小

坏处
会延长编译时间，所以切记请勿在debug模式下开启混淆
混淆会让代码失去可读性，且无法还原



https://blog.csdn.net/qq_29634351/article/details/124146104
Android中可以通过混淆减少apk的大小，提高apk反编译的难度。
但是在混淆过后会遇到一个问题，就是日志，比如说错误日志的函数会变成abcd.
怎么解决这个问题呢
通过mapping文件





在计算机技术中，"mapping"（映射）是指将一个值或实体与另一个值或实体相关联或对应的过程。

具体而言，"mapping" 可以表示以下几种含义：

数据映射：在数据处理和数据库领域，"mapping" 是指将一个数据结构的值或属性映射到另一个数据结构的过程。
这可以包括将数据从一个格式转换为另一个格式，或者将数据从一个数据模型映射到另一个数据模型。

内存映射：在操作系统和计算机体系结构中，"mapping" 是将虚拟内存地址映射到物理内存地址或其他设备地址的过程。
这种映射允许程序使用虚拟内存地址来访问实际的物理内存或设备。

键值映射：在编程和数据结构中，"mapping" 通常指键值映射 (key-value mapping)。
这是一种将唯一的键与相应的值相关联的数据结构或概念。常见的键值映射实现包括字典、哈希表、关联数组等。

网络映射：在网络编程中，"mapping" 可以指将网络地址映射到其他网络资源或服务的过程。
例如，端口映射 (port mapping) 用于将公共 IP 地址和端口映射到特定计算机或设备上的私有 IP 地址和端口。

总之，"mapping" 在计算机技术中通常表示将一个值或实体与另一个值或实体相关联的过程，
涉及数据转换、内存管理、键值关联等方面的操作。具体的含义取决于上下文和应用领域


