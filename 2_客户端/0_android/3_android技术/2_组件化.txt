



一、组件化：
将一个App分成多个模块，每个模块都是一个组件（module），
开发过程中可以让这些组件相互依赖或独立编译、调试部分组件，
但是这些组件最终会合并成一个完整的Apk去发布到应用市场。

现在项目架构上都是组件化的框架，某些修改频繁的Module模块设置成插件模块，
编译成独立的APK文件，以插件的形式进行部署，供宿主模块调用。





二、组件化的优势：
https://blog.csdn.net/zenmela2011/article/details/126032989
①各个组件专注自身功能的实现，模块中代码高度聚合，
只负责一项任务，也就是常说的单一职责原则；
②各组件高度解耦，各业务研发可以互不干扰、提升协作效率；
③加快编译速度，提高开发效率





三、组件化原理：
组件化有一个限制，就是禁止横向依赖，也就是说在同一层级下的多个模块是禁止相互依赖的。
这样做是为了解耦，最常用的就是ARouter框架。

ARouter实现跳转的原理是在ARouter内部维护了一个路由表，
路由表里的数据来自于各个模块的页面信息，每个模块负责向路由框架中注册自己的信息，
这样需要页面跳转的时候只需要输入要跳转的页面信息，
路由框架就会从路由表中去寻址找到该页面，然后就可以使用startActivity来跳转了。


https://blog.csdn.net/zenmela2011/article/details/126032989
https://blog.csdn.net/hailong0529/article/details/89392064
https://zhanghuayang.blog.csdn.net/article/details/55213884








