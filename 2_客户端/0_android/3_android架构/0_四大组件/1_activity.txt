Activity的生命周期及方法

onCreate	表示Activity正在被创建，这也是Activity的生命周期的第一个方法。
onRestart	表示Activity正在重新启动，此生命周期只有在onPause与onStop都执行过才会被调用
onStart	表示Activity正在被启动，即将开始，此时Activity已经可见但是还没有出现在前台，还无法交互
onResume	表示Activity已经可见并出现在前台可以与用户进行交互
onPause	表示Activity正在停止
onStop	表示Activity停止并不可见
onDestroy	表示Activity即将被销毁，这是Activity的最后一个回调



Activity第一次启动，回调如下：onCreate -> onStart -> onResume

打开新Activity或按Home键：onPause->onStop
如果新的Activity的Theme为Dialog或者Translucent（透明）时不会调用onStop方法

后台再次回到Activity：onRestart->onStart->onResume

按Back键退出Activity：onPause->onStop->onDestroy


（1）当用户按下home键，Activity经历onPause-onStop的过程，
这时重新进入Activity经历onRestart-onStart-onResume过程；
如果按下back键，经历onPause-onStop-onDestroy的过程。

（2）当在当前ActivityA中打开一个新的ActivityB，
要注意的是只有A的onPause执行完成后B的onCreate-…过程才能开始，
而A的onStop则是在之后才会进行的。
所以不应该在onPause中做耗时的操作，应该尽快让B显示出来进行操作才行。

当我们的Activity上弹出Dialog对话框时，程序的生命周期依然是
onCreate() —> onStart() —> onResume()，
在弹出Dialog的时候并没有onPause()和onStop()方法。而在此时我们按下Home键，
才会继续执行onPause()和onStop()方法。这说明对话框并没有使Activity进入后台，
而是在点击了Home键后Activity才进入后台工作。


onResume
比如做一个音乐播放程序，在播放过程中，突然有电话打进来了，这时系统自动调出电话，
而你的音乐播放程序置于后台，触发了onPause方法。当你电话结束后，关闭电话，
又自动回到音乐播放程序，此时，触发onResume方法，
这时，如果你之前在onPause的时候记录了播放点，就可以在onResume方法里来继续播放。

onResume方法是Activity第一次创建时 重新加载实例时调用
 例如 我打开App第一个界面OnCreate完 就调用onResume 然后切换到下一个界面
 第一个界面不finish 按Back键回来时 就调onResume 不调onCreate，
  还有就是 App用到一半 有事Home键切出去了 在回来时调onResume



Activity本质上有四种状态：

运行（Active/Running）:Activity处于活动状态，
此时Activity处于栈顶，是可见状态，可以与用户进行交互。

暂停（Paused）:当Activity失去焦点时，或被一个新的非全面屏的Activity，
或被一个透明的Activity放置在栈顶时，Activity就转化为Paused状态。
此刻并不会被销毁，只是失去了与用户交互的能力，其所有的状态信息及其成员变量都还在，
只有在系统内存紧张的情况下，才有可能被系统回收掉。

停止（Stopped）:当Activity被系统完全覆盖时，被覆盖的Activity就会进入Stopped状态，
此时已不在可见，但是资源还是没有被收回。

系统回收（Killed）:当Activity被系统回收掉，Activity就处于Killed状态。



onStart()/onResume，会将状态切换到active/running状态
onPause()，会将状态从active/running状态切换到pause状态
onStop(), 会将状态从pause状态切换到stop状态
onPause()/onStop()->onStart()/onResume,
会将状态从pause/stop状态切换到active/running状态



