

1.什么是值传递和引用传递？
public void add(int a) { int b = a; } 这个可以看作是值传递，
a是基本数据类型，他把他的值传给了b public void add(Object obj)
{ Object objTest = obj; } 这个可以看作是址传递，obj是引用数据类型，
是把他栈中指向堆中的对象的地址值赋值给了objTest.
这时候就同时有两个引用指向了堆中的某个Object对象 其实
这样看来，java应该只有值传递的。如果是基本数据类型，传递的就是实际的值.
如果是引用数据类型，传递的就是该引用的地址值.



2.参数传递，引用
1.Java参数都是进行传值。对于对象而言，传递的值是对象的引用，
也就是说原始引用和参数引用的那个拷贝，都是指向同一个对象。
2.引用类型
2.1强引用是最经常使用的一种引用，如new操作创建的对象就属于强引用，
只要强引用存在，无论如何JVM都不会去回收其内存.
2.2软引用是由java.lang.ref.SoftReference所提供的功能，
被其所关联的对象不存在强引用并且此时JVM内存不足才会去回收该对象
2.3弱引用是java.lang.ref包下的WeakReferenc类所提供的包装功能，
对于弱引用JVM会回收仅被弱引用所关联的对象
2.4虚引用是由java.lang.ref.PhantomReference所提供的关联功能,
虚引用对其原对象的生命周期毫无影响，
其可以算是一种标记,当其所引用对象被回收时其会自动加入到引用队列中