
1.数据类型
https://blog.csdn.net/weixin_40228534/article/details/123950132

基础类型有 8 种：byte、boolean、char、short、int、float、long、double
在方法中定义的非全局基本数据类型变量的具体内容是存储在栈中的，在内存中存储。
int和Integer有什么区别，为什么要使用包装类？
为了能够将这些基本数据类型当成对象操作，Java为每一个基本数据类型都引入了对应的包装类型


引用数据类型：string，class，array，interface
只要是引用数据类型变量，其具体内容都是存放在堆中的，而栈中存放的是其具体内容所在内存的地址。
（比较长的）

String属于对象


不可变数据类型
当该数据类型的对应变量的值发生了改变，
那么它对应的内存地址也会发生改变，对于这种数据类型，就称为不可变数据类型。
java中基本数据类型（包括int，char，long等等）以及String类型均为不可变类型。
不可变类型更安全，用户或其他人访问时，
对类中的元素不会进行修改，从而保证程序的正确性，在项目中可以更好地保存。

可变数据类型
当该数据类型的对应变量的值发生了改变，那么它对应的内存地址不发生改变，
对于这种数据类型，就称为可变数据类型，
当可变数据类型改变时它实际上是更改了内存中的内容。
StringBuilder，List,Set,Map这些为可变类型。
一个程序较多的的使用可变数据类型，会获得更好的性能。



2.String,StringBuffer和StringBuilder
String是不可变对象，适用于少量的字符串操作的情况
如果被改变，会生成一个新的实例对象

StringBuilder类也代表可变字符串对象.

StringBuffer对象代表一个字符序列可变的字符串，有大量操作，用StringBuffer。
当一个StringBuffer被创建以后，
通过StringBuffer提供的
append()、insert()、reverse()、setCharAt()、setLength()等方法
可以改变这个字符串对象的字符序列，但都不会产生新的对象。
如果长度超过了该字符串存储空间大小了就就会先进性扩容，先原始容量 * 2 + 2。

StringBuffer是线程安全的，它的所有公开方法都是同步的，
而StringBuilder是没有对方法加锁同步的，
因此StringBuilder的性能要大于StringBuffer。




