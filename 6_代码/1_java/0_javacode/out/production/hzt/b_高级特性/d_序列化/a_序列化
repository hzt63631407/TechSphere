
如果你在商场看中了一款衣柜，但它很大，为了方便运输，就必须要先把它拆掉，
运到家后再重新组装。你和商家协商好了，由他们为你把这个衣柜拆成可重组的零件运到家里，
然后由你自己把这些零件重新组装成一个衣柜。那么在这里，
商家把衣柜拆成各个零件、然后打包的这个过程就是“序列化”，
在代码中，就是将一些程序对象转换成 JSON 等格式的字符串的过程。
接下来，你用这些零件再重新组装成一个衣柜，这个过程就是“反序列化”，

为了方便程序处理和方便网络传输而做的两种互斥的转换。



序列化：序列化是把对象转换成有序字节流，以便在网络上传输或者保存在本地文件中。
核心作用是对象状态的保存与重建。我们都知道，Java对象是保存在JVM的堆内存中的，
也就是说，如果JVM堆不存在了，那么对象也就跟着消失了。
而序列化提供了一种方案，可以让你在即使JVM停机的情况下也能把对象保存下来的方案。
就像我们平时用的U盘一样。把Java对象序列化成可存储或传输的形式（如二进制流），
比如保存在文件中。这样，当再次需要这个对象的时候，从文件中读取出二进制流，
再从二进制流中反序列化出对象。
反序列化：客户端从文件中或网络上获得序列化后的对象字节流，
根据字节流中所保存的对象状态及描述信息，通过反序列化重建对象。




https://www.cnblogs.com/xdp-gacl/p/3777987.html