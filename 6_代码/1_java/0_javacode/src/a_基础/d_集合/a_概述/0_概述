

既然Java提供了数组这种数据类型，可以充当集合，
那么，我们为什么还需要其他集合类？这是因为数组有如下限制：
数组初始化后大小不可变；
数组只能按索引顺序存取。

因此，我们需要各种不同类型的集合类来处理不同的数据，例如：
可变大小的顺序链表；
保证无重复元素的集合；

Java的集合类定义在java.util包中，支持泛型，主要提供了3种集合类，包括List，Set和Map。
Java集合使用统一的Iterator遍历，尽量不要使用遗留接口。



重点：集合中只能存放引用，不能存放基本类型。 不能放int，要放Integer

集合包括List，Set和Map,是一个存储数据容器，不属于数据类型
1.Java集合中实际存放的只是对象的引用
2.可以通过包装类把基本类型转为对象类型，存放引用就可以解决这个问题



既然Java提供了数组这种数据类型，可以充当集合，那么，
我们为什么还需要其他集合类？这是因为数组有如下限制：

数组初始化后大小不可变；
数组只能按索引顺序存取。
因此，我们需要各种不同类型的集合类来处理不同的数据，例如：

可变大小的顺序链表；
保证无重复元素的集合；


集合（Iterator）
https://www.jianshu.com/p/d654c0cbb736
集合是一个存储数据容器。

2.1 Collection
list
ArrayList:的基本数据结构使数组结构的array查询速度更快，添加和删除速度更慢。
由于以数组的形式保存，所以随机访问非常快。

Vector :底层为数组结构的array，与ArrayList相同，查询速度快，增删慢；

LinkedList:的基础是使用链表结构，添加删除速度快，查询稍慢；

ArrayList和Vector的区别：
1) Vector 是线程同步的，所以它也是线程安全的，而 ArrayList 是线程异步的，是不安全的。
2) Vector 是一种老的动态数组，是线程同步的，效率很低，一般不赞成使用。

set
HashSet基于HashMap实现的集合，对HashMap做了一些封装。
linked hashset :继承了hashset类，链表集合
TreeSet：红黑树集合，实现了sortedset，可以有序的遍历

queue
ArrayDeque：数组实现的双端队列，可以在队列两端插入和删除元素。
LinkedList：也是双向链表

map
HashMap：哈希映射/字典，无序字典，键值对数据，key是唯一的
TreeMap：TreeMap红黑树实现的key->value融合，有序的
LinkedHashMap：LinkedHashMap链表映射/字典，继承了hashmap的所有特性，
同时又实现了双向链表的特性，保留了元素插入顺序。

Iterator
Iterator通常被称为轻量级对象，创建它的代价很小，它是遍历集合的工具，
即我们通常通过Iterator迭代器来遍历集合。
我们说Collection依赖于Iterator，
是因为Collection的实现类都要实现iterator()函数，返回一个Iterator对象





