
1.定义：
JAVA 反射机制是在运行状态中，对于任意一个类，
都能够知道这个类的所有属性和方法；
对于任意一个对象，都能够调用它的任意一个方法和属性；
这种动态获取的信息以及动态调用对象的方法的功能称为 java 语言的反射机制。



2.工作原理：
我们一般平时是通过new的形式创建对象实际上就是通过这些Class来创建的，
只不过这个class文件是编译的时候就生成的，程序相当于写死了给jvm去跑。

java源文件——〉class文件——〉class对象——〉new对象

反射是什么呢？当我们的程序在运行时，
需要动态的加载一些类这些类可能之前用不到所以不用加载到jvm，
而是在运行时根据需要才加载。



3.获取方法
源代码阶段:Class.forName(全类名)方法，最常用
class对象阶段:类名.class属性
运行时阶段:对象名.getClass()方法


4.优点
4.1代码更灵活
通过配置信息调用类的方法;
编译器将.java文件编译成.class文件之后，
普通方式创建的对象就不能再变了，我只能选择是运行还是不运行这个.class文件。
假如没有反射的话，我们是不是得修改代码，将Mysql驱动改为Oracle驱动，
重新编译运行，再放到服务器上。

4.2解耦
提高程序的可扩展性，提高代码的复用率，方便外部调用；



5.缺点
性能问题：Java 反射中包含了一些动态类型，
JVM 无法对这些动态代码进行优化，因此通过反射来操作的方式要比正常操作效率更低。
安全问题：使用反射时要求程序必须在一个没有安全限制的环境中运行，
如果程序有安全限制，就不能使用反射。
程序健壮性：反射允许代码执行一些平常不被允许的操作，破坏了程序结构的抽象性，
导致平台发生变化时抽象的逻辑结构无法被识别。


动态代理
https://www.cnblogs.com/gonjan-blog/p/6685611.html