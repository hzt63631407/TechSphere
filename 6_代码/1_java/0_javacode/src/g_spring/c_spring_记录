
springboot
1.都是 mcv 模型
M:就是和数据库打交道的, 创建表等操作
V:view 视图(视图函数,就是装HTML文件的)
C:controller 控制器
2.创建路由 python是装饰器 java应该是注解 @app.route
3.遵循 restful接口开发




Spring MVC提供了一种友好的方式来开发Web应用程序
Spring MVC最大的弊病在于存在大量的配置，
并且这些配置在不同的项目中具有很高的相似性。从而导致重复配置，繁琐而且杂乱！

1.springboot mvc架构 轻量级 类似flask
内嵌了tomcat


sprintboot接口开发
https://www.cnblogs.com/swayfish/p/16214190.html


springcloud
https://ke.qq.com/course/2555431/9395691934121511#term_id=102660421
https://ke.qq.com/course/2769276/9685052471001468#term_id=102877577
https://ke.qq.com/course/3136759/10481244918766839#term_id=103261331


mybatis框架
基于jdbc的数据操作持久层的框架，轻量级框架


Mybatis是一个半orm（对象映射）框架

jdbc的缺点：
1.直接把数据库连接写到java代码，不利于sql语句的修改
2.jdbc连接数据库的步骤比较繁琐
3.不利于数据源的切换：mysql，orcale，db2 redis
4.java对象的数量类型和数据库的类型天然具有不兼容性

mybatis框架（还有hibernate）
能够解决这些问题
1.提高了一个我们自己来封装sql语句的接口，更灵活
基于SQL编程
2.与JDBC相比，减少了代码的冗余量，减少了50%的代码量，不需要手动开关连接。



springcloud

1.你们后台接口什么实现的？
微服务架构
springcloud实现

2.springcloud和dubbo区别
dubbo是接口，主要有注册中心，就有接口。
springcloud是一套体系

3.springcloud的功能
1.服务网关
2.服务注册中心
3.客户端负载均衡 内部系统之间 服务调用自己内部决定去调用服务提供者
4.mq



后端项目：
https://blog.csdn.net/sd09044901guic/article/details/80132378


mybatis
https://ke.qq.com/course/381746/3140424252642098#term_id=100455040

todo：
java必须参数：
https://www.jb51.net/article/247281.htm